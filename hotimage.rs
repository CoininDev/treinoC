extern crate image;
use image::{Rgb, ImageBuffer};

fn formatar_info(bruto: &str) -> Vec<Vec<f32>>{
    let texto: String = bruto.replace("0.00,", "").replace("nan,", "0.00,");
    let valores: Vec<f32>= texto.split(",").filter_map(|s| s.parse().ok()).collect();

    //transformar em matriz
    let largura = 17;

    let mut matriz = Vec::new();
    let mut linha = Vec::new();
    for valor in valores{
        linha.push(valor);

        if linha.len() == largura{
            matriz.push(linha);
            linha = Vec::new();
        }
    }
    return matriz
}

fn gerar_imagem(matriz: Vec<Vec<f32>>) -> ImageBuffer<Rgb<u8>, Vec<u8>>{
    let largura = matriz[0].len();
    let altura = matriz.len();

    let mut imagem = ImageBuffer::new(largura as u32, altura as u32);

    for (y, linha) in matriz.iter().enumerate(){
        for (x, temperatura) in linha.iter().enumerate(){
            //converte temperatura (Cº) para cor, 0=0, 50=255
            let temperaturai32: i32 = temperatura.floor() as i32 * 100; 
            
            //      atual máximo
            //temp.  18    50
            //cor    x    255
            // x = (18*255)/50
            // multiplicado por 100 para contar 2 casas decimais na hora de pintar o pixel, 18.25 != 18.82
            let vermelho = ((temperaturai32 * 255 ) / 5000) as u8;
            
            imagem.put_pixel(x as u32, y as u32, Rgb([vermelho, 5, 5]));
        }
    }

    return imagem;
}

fn main(){
    let info_bruto= "0.00,18.14,0.00,18.85,0.00,18.37,0.00,18.88,0.00,18.91,0.00,18.46,0.00,18.62,0.00,17.91,0.00,18.73,0.00,nan,0.00,18.63,0.00,19.01,0.00,18.00,0.00,18.31,0.00,18.68,0.00,18.43,17.89,0.00,17.98,0.00,18.08,0.00,18.91,0.00,17.51,0.00,19.06,0.00,18.64,0.00,18.35,0.00,18.61,0.00,18.32,0.00,17.77,0.00,17.84,0.00,19.16,0.00,19.10,0.00,18.59,0.00,17.83,0.00,0.00,18.83,0.00,18.22,0.00,18.45,0.00,17.89,0.00,18.61,0.00,18.66,0.00,18.47,0.00,18.00,0.00,18.79,0.00,19.22,0.00,18.99,0.00,18.88,0.00,18.55,0.00,18.41,0.00,19.32,0.00,18.60,18.44,0.00,17.58,0.00,18.67,0.00,18.40,0.00,18.67,0.00,18.50,0.00,19.42,0.00,18.99,0.00,18.19,0.00,19.49,0.00,18.63,0.00,18.92,0.00,18.02,0.00,19.10,0.00,18.91,0.00,19.94,0.00,0.00,18.02,0.00,17.85,0.00,18.42,0.00,17.92,0.00,18.76,0.00,18.44,0.00,18.64,0.00,18.52,0.00,18.24,0.00,18.42,0.00,19.21,0.00,18.79,0.00,18.42,0.00,18.80,0.00,18.42,0.00,18.83,18.19,0.00,18.88,0.00,18.89,0.00,18.31,0.00,18.40,0.00,19.05,0.00,17.96,0.00,18.03,0.00,19.08,0.00,18.99,0.00,18.81,0.00,19.39,0.00,18.83,0.00,19.55,0.00,18.67,0.00,17.73,0.00,0.00,17.76,0.00,18.67,0.00,18.25,0.00,19.15,0.00,18.17,0.00,18.48,0.00,18.73,0.00,18.64,0.00,18.92,0.00,18.62,0.00,18.77,0.00,19.15,0.00,18.74,0.00,18.88,0.00,19.22,0.00,19.04,18.37,0.00,18.32,0.00,18.00,0.00,18.83,0.00,18.39,0.00,18.33,0.00,18.97,0.00,18.36,0.00,18.82,0.00,18.45,0.00,19.60,0.00,18.66,0.00,19.17,0.00,19.05,0.00,19.19,0.00,19.51,0.00,0.00,18.33,0.00,17.89,0.00,18.07,0.00,18.17,0.00,18.24,0.00,18.97,0.00,19.15,0.00,18.91,0.00,19.35,0.00,18.85,0.00,19.87,0.00,18.94,0.00,19.36,0.00,19.20,0.00,18.88,0.00,19.09,19.05,0.00,19.01,0.00,19.58,0.00,18.66,0.00,18.80,0.00,19.48,0.00,18.83,0.00,19.09,0.00,19.05,0.00,19.01,0.00,18.95,0.00,19.23,0.00,19.05,0.00,19.92,0.00,18.85,0.00,19.83,0.00,0.00,17.72,0.00,18.70,0.00,19.20,0.00,18.78,0.00,18.33,0.00,19.54,0.00,19.32,0.00,19.33,0.00,19.06,0.00,18.75,0.00,19.04,0.00,18.71,0.00,19.24,0.00,18.67,0.00,19.35,0.00,18.72,18.59,0.00,18.82,0.00,18.84,0.00,18.56,0.00,18.19,0.00,18.27,0.00,19.53,0.00,18.96,0.00,19.14,0.00,19.56,0.00,18.42,0.00,19.24,0.00,18.75,0.00,18.62,0.00,18.07,0.00,18.93,0.00,0.00,18.52,0.00,18.75,0.00,17.93,0.00,19.05,0.00,18.63,0.00,18.88,0.00,18.63,0.00,18.61,0.00,18.39,0.00,18.59,0.00,18.84,0.00,18.80,0.00,18.12,0.00,18.66,0.00,18.04,0.00,18.91,18.84,0.00,18.59,0.00,18.47,0.00,18.67,0.00,18.81,0.00,18.93,0.00,19.04,0.00,19.45,0.00,19.44,0.00,19.24,0.00,19.23,0.00,18.65,0.00,19.18,0.00,18.72,0.00,18.00,0.00,17.99,0.00,0.00,18.01,0.00,18.29,0.00,18.72,0.00,18.40,0.00,18.13,0.00,19.00,0.00,19.34,0.00,19.15,0.00,18.71,0.00,19.23,0.00,18.57,0.00,18.80,0.00,18.48,0.00,18.92,0.00,19.25,0.00,18.58,19.12,0.00,18.48,0.00,19.14,0.00,19.37,0.00,19.15,0.00,19.28,0.00,19.18,0.00,19.06,0.00,19.20,0.00,19.41,0.00,19.20,0.00,19.68,0.00,18.57,0.00,18.61,0.00,19.39,0.00,18.03,0.00,0.00,18.82,0.00,19.05,0.00,18.79,0.00,18.94,0.00,18.56,0.00,19.14,0.00,19.48,0.00,19.22,0.00,19.61,0.00,18.96,0.00,19.45,0.00,19.22,0.00,19.04,0.00,18.41,0.00,19.13,0.00,18.88,20.24,0.00,20.57,0.00,19.60,0.00,18.51,0.00,18.30,0.00,19.46,0.00,19.23,0.00,19.63,0.00,19.62,0.00,19.27,0.00,18.93,0.00,19.00,0.00,19.49,0.00,18.46,0.00,17.97,0.00,18.32,0.00,0.00,18.82,0.00,19.48,0.00,19.59,0.00,19.32,0.00,18.53,0.00,18.62,0.00,19.39,0.00,19.25,0.00,19.36,0.00,18.45,0.00,19.37,0.00,18.87,0.00,18.91,0.00,19.21,0.00,18.65,0.00,18.65,18.69,0.00,19.78,0.00,19.83,0.00,19.87,0.00,19.02,0.00,18.48,0.00,18.50,0.00,20.02,0.00,19.13,0.00,18.88,0.00,18.80,0.00,19.18,0.00,18.88,0.00,18.96,0.00,18.94,0.00,18.41,0.00,0.00,17.88,0.00,18.80,0.00,19.04,0.00,20.02,0.00,19.21,0.00,18.69,0.00,18.62,0.00,19.59,0.00,19.06,0.00,18.61,0.00,19.00,0.00,18.84,0.00,19.82,0.00,19.43,0.00,19.56,0.00,18.60,18.86,0.00,18.70,0.00,18.96,0.00,19.23,0.00,19.38,0.00,19.74,0.00,18.65,0.00,19.46,0.00,19.63,0.00,19.05,0.00,18.89,0.00,19.87,0.00,18.79,0.00,18.85,0.00,18.15,0.00,19.35,0.00,0.00,18.50,0.00,18.69,0.00,18.01,0.00,18.19,0.00,18.92,0.00,19.53,0.00,18.56,0.00,19.02,0.00,19.64,0.00,18.86,0.00,19.43,0.00,19.24,0.00,18.89,0.00,19.23,0.00,19.91,0.00,18.06,18.22,0.00,18.85,0.00,18.72,0.00,19.29,0.00,18.57,0.00,19.75,0.00,19.25,0.00,18.36,0.00,18.88,0.00,19.42,0.00,18.26,0.00,18.64,0.00,18.99,0.00,19.29,0.00,19.56,0.00,18.56,0.00,";
    let info = formatar_info(info_bruto);
    let _ = gerar_imagem(info).save("output.png").unwrap();
}
